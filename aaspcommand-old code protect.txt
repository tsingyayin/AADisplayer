###OHhhhhhhhhh~ Dear
###我们伟大的命令提示符版解释器完成了它的历史使命
###这些代码现在将被留在此地被保护，以防未来需要再次使用

#全文解释模式启动器
def spawn():
    Open=False
    global warnline,texterrorline,numseterrorline,formatwarnline,nameerrorline

    while Open==False:
        try:
            print("sysinfo→"+msg("Spawn_Mode_Name_Of_File"))
            Storyname=input()
            if Storyname=="exit":
                return
            else:
                files=open("story\\"+Storyname,"r",encoding="UTF-8")
        except IOError:
            print("sysinfo→"+msg("Spawn_Mode_Not_Found").format(Storyname))
        else:
            Open=True

    Ver=""
    linecount=0

    for line in files.readlines():
        linecount+=1
        #先看有没有回车，没有就给它加上，但是要提出警告
        if line[-1]!="\n":
            line+="\n"
            formatwarnline+=[[linecount,Storyname,line[:-1]]]

        #查找版本号
        if line[0]=="/": 
            Ver=line[1:-1]
            print(msg("Spawn_Mode_Get_Version"),Ver)

        #获取标题控制器
        elif line[0]==":":
            if line.count(":")!=4:
                texterrorline+=[[linecount,Storyname,line[:-1]]]
                break
            try:
                Titlesetlst=line[1:-1].split(":")
                if len(Titlesetlst)!=4:raise Exception
            except Exception:
                numseterrorline+=[[linecount,Storyname,line[:-1]]]
                Ver="TitleERROR"
            else:
                print(msg("Spawn_Mode_Get_Title"),Titlesetlst[0])
                print(msg("Spawn_Mode_Get_Subtitle"),Titlesetlst[1])

            break


#重新打开文件，从头开始处理
    files=open("story\\"+Storyname,"r",encoding="UTF-8")

    if Ver=="SPOL0.6.0":                                                         #遵循SPOL0.6.0标准的读取
        run=1
        while run!=0:
            run=core0_6_0.SPOL(files,Storyname)
            files.close()
            try:
                files=open("story\\"+run+".spol","r",encoding="UTF-8")
                Storyname=run+".spol"
            except Exception:
                run=0
            else:
                None

    

    else:
        print(msg("Spawn_Mode_Version_Error").format(Ver))
        
      #错误警示
    print("#####################")
    if warnline!=[]:
      print(msg("Warning_Warn_Count").format(len(warnline)))
      for i in warnline:
          print(msg("Warning_Warn_Info").format(i[0],i[1],i[2]))
      print()
    if texterrorline!=[]:
      print(msg("Warning_Texterror_Count").format(len(texterrorline)))
      for i in texterrorline:
          print(msg("Warning_Texterror_Info").format(i[0],i[1],i[2]))
      print()
    if formatwarnline!=[]:
      print(msg("Warning_Formatwarn_Count").format(len(formatwarnline)))
      for i in formatwarnline:
          print(msg("Warning_Formatwarn_Info").format(i[0],i[1],i[2]))
      print()
    if numseterrorline!=[]:
      print(msg("Warning_Numseterror_Count").format(len(numseterrorline)))
      for i in numseterrorline:
          print(msg("Warning_Numseterror_Info").format(i[0],i[1],i[2]))
      print()
    if nameerrorline!=[]:
      print(msg("Warning_Nameerror_Count").format(len(nameerrorline)))
      for i in nameerrorline:
          print(msg("Warning_Nameerror_Info").format(i[0],i[1],i[2]))
      print()
    print("sysinfo→"+msg("Spawn_Mode_End"))
    input()
    print("#####################")

#单行解释模式启动器
def singletext():
    while True:
        print("sysinfo→"+msg("Single_Mode_Input_Version"))
        linestandard=input(r"Userinput\line→")
        if linestandard=="help":
            print(msg("Single_Mode_Version_List")+"\n"+"0.6.0")

        elif linestandard=="0.6.0":
            while True:
                Usrtextipt=input(r"Userinput\line\SPOL0.6.0→")
                if Usrtextipt=="exit":
                    break
                else:
                    core0_6_0.SPOL_s(Usrtextipt+"\n")


        elif linestandard=="exit":
            break
        else:
            print("sysinfo→"+msg("Single_Mode_Version_Error").format(linestandard))
